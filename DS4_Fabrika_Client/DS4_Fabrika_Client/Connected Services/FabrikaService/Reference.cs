//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DS4_Fabrika_Client.FabrikaService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Stanje", Namespace="http://schemas.datacontract.org/2004/07/DS4_Fabrika")]
    [System.SerializableAttribute()]
    public partial class Stanje : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double GustinaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ZauzeceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Gustina {
            get {
                return this.GustinaField;
            }
            set {
                if ((this.GustinaField.Equals(value) != true)) {
                    this.GustinaField = value;
                    this.RaisePropertyChanged("Gustina");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Zauzece {
            get {
                return this.ZauzeceField;
            }
            set {
                if ((this.ZauzeceField.Equals(value) != true)) {
                    this.ZauzeceField = value;
                    this.RaisePropertyChanged("Zauzece");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FabrikaService.IFabrikaService")]
    public interface IFabrikaService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFabrikaService/DodajSastojak", ReplyAction="http://tempuri.org/IFabrikaService/DodajSastojakResponse")]
        bool DodajSastojak(string naziv, double zapremina, double gustina);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFabrikaService/DodajSastojak", ReplyAction="http://tempuri.org/IFabrikaService/DodajSastojakResponse")]
        System.Threading.Tasks.Task<bool> DodajSastojakAsync(string naziv, double zapremina, double gustina);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFabrikaService/Flasiraj", ReplyAction="http://tempuri.org/IFabrikaService/FlasirajResponse")]
        bool Flasiraj(double zapremina);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFabrikaService/Flasiraj", ReplyAction="http://tempuri.org/IFabrikaService/FlasirajResponse")]
        System.Threading.Tasks.Task<bool> FlasirajAsync(double zapremina);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFabrikaService/IsprazniSistem", ReplyAction="http://tempuri.org/IFabrikaService/IsprazniSistemResponse")]
        void IsprazniSistem();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFabrikaService/IsprazniSistem", ReplyAction="http://tempuri.org/IFabrikaService/IsprazniSistemResponse")]
        System.Threading.Tasks.Task IsprazniSistemAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFabrikaService/PrikaziStanje", ReplyAction="http://tempuri.org/IFabrikaService/PrikaziStanjeResponse")]
        DS4_Fabrika_Client.FabrikaService.Stanje PrikaziStanje();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFabrikaService/PrikaziStanje", ReplyAction="http://tempuri.org/IFabrikaService/PrikaziStanjeResponse")]
        System.Threading.Tasks.Task<DS4_Fabrika_Client.FabrikaService.Stanje> PrikaziStanjeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFabrikaService/VratiPromene", ReplyAction="http://tempuri.org/IFabrikaService/VratiPromeneResponse")]
        string[] VratiPromene();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFabrikaService/VratiPromene", ReplyAction="http://tempuri.org/IFabrikaService/VratiPromeneResponse")]
        System.Threading.Tasks.Task<string[]> VratiPromeneAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFabrikaServiceChannel : DS4_Fabrika_Client.FabrikaService.IFabrikaService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FabrikaServiceClient : System.ServiceModel.ClientBase<DS4_Fabrika_Client.FabrikaService.IFabrikaService>, DS4_Fabrika_Client.FabrikaService.IFabrikaService {
        
        public FabrikaServiceClient() {
        }
        
        public FabrikaServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FabrikaServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FabrikaServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FabrikaServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool DodajSastojak(string naziv, double zapremina, double gustina) {
            return base.Channel.DodajSastojak(naziv, zapremina, gustina);
        }
        
        public System.Threading.Tasks.Task<bool> DodajSastojakAsync(string naziv, double zapremina, double gustina) {
            return base.Channel.DodajSastojakAsync(naziv, zapremina, gustina);
        }
        
        public bool Flasiraj(double zapremina) {
            return base.Channel.Flasiraj(zapremina);
        }
        
        public System.Threading.Tasks.Task<bool> FlasirajAsync(double zapremina) {
            return base.Channel.FlasirajAsync(zapremina);
        }
        
        public void IsprazniSistem() {
            base.Channel.IsprazniSistem();
        }
        
        public System.Threading.Tasks.Task IsprazniSistemAsync() {
            return base.Channel.IsprazniSistemAsync();
        }
        
        public DS4_Fabrika_Client.FabrikaService.Stanje PrikaziStanje() {
            return base.Channel.PrikaziStanje();
        }
        
        public System.Threading.Tasks.Task<DS4_Fabrika_Client.FabrikaService.Stanje> PrikaziStanjeAsync() {
            return base.Channel.PrikaziStanjeAsync();
        }
        
        public string[] VratiPromene() {
            return base.Channel.VratiPromene();
        }
        
        public System.Threading.Tasks.Task<string[]> VratiPromeneAsync() {
            return base.Channel.VratiPromeneAsync();
        }
    }
}
